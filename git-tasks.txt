Завдання:
    створіть у себе репозиторій
    Створіть у ньому текстовий файл
    Проіндексуйте цей файл
    Перевірте стан проекту після індексації
    Зробіть коміт
    Зробіть зміну у текстовому файлі
    Проіндексуйте цей файл знову
    Зробіть 2 коміт
    Подивіться на список комітів та надішліть мені скріншот з ними

Завдання:

В окремій папці створити новий репозиторій
створити файл file1.txt і написати туди рядок "Hello Git"
Проіндексувати та закомітити цей файл
Створити файл file2.txt і написати всередину нього "Цей текст буде змінено"
Зробити коміт з цим файлом
Виправити текст у файлі на "Цей текст змінився"
Зробіти коміт-аменд у якому залишити старе повідомлення але додати зміни до file2 з попереднього пункту
Створити файл file3.txt і написати всередину нього "Цей текст залишиться без змін"
Зробити коміт з цим файлом і повідомленням "Add file3 and incorrect message"
Зробити коміт-аменд у якому не індексвати нових змін але при коміті змінити повідомлення на "Add file3 and correct message"
В кінці для перевірки виконати команди
 git log --pretty=oneline
 git reflog

 
 Створити в проекті .gitignore
     в ньому ігноруйте 
        node_modules
        test-file.docx
    створіть test-file.docx і переконайтеся що його не індексує

Завдання:
    1 В новому або існуючому репозиторії створіть нову гілку dev
    2 Подивіться на всі гілки в цьому репозиторії
    3 В цьому репозиторії зробіть якийсь новий коміт
    4 Перевірте git log що гілки вказують на різні коміти
    5 Видаліть гілку dev
    
Команди для виконання завдання:
    git branch
    git branch <ім'я>
    git branch -d <ім'я>
    git log
    git add
    git commit

Завдання:
    Створіть гілку branch-task-1
    Перейдіть на неї
    Зробіть на ній 2 коміти з якимись змінами 
    поверніться на гілку main та злийте коміти з гілки branch-task-1 до main
    
Команди:
    git branch
    git branch <ім'я>
    git switch <ім'я>
    git merge <ім'я>
    git add
    git commit
